//tim.c//
#include "tim.h"

TIM_HandleTypeDef htim2;

void MX_TIM2_Init(void)
{
    TIM_IC_InitTypeDef sConfigIC = {0};

    htim2.Instance = TIM2;
    htim2.Init.Prescaler = 84 - 1;  // Timer clock = 84 MHz / 84 = 1 MHz ? 1 tick = 1 Âµs
    htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
    htim2.Init.Period = 0xFFFF;
    htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
    htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

    if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
    {
        Error_Handler();
    }

    /** Konfigurasi channel input capture TIM2 CH2 (PA1) **/
    sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
    sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
    sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
    sConfigIC.ICFilter = 0;

    if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
    {
        Error_Handler();
    }
}

/* Fungsi callback interrupt capture bisa di-handle di Jarak.c */


//tim.h//
#ifndef _TIM_H_
#define _TIM_H_

#include "main.h"

extern TIM_HandleTypeDef htim2;

void MX_TIM2_Init(void);

#endif
